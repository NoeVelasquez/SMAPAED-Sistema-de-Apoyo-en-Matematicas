<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>La población de una cierta región puede ser modelada con la fórmula A=10000({{e}^{0.005t}}), en donde A representa
 a la población y t representa el tiempo en años. Encuentra la población al final de 10 años.</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7fbpfy4xdfcHMlc7AAAAAElFTkSuQmCC
</value>
  </data>
</root>