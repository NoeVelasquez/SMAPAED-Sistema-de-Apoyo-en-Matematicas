<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>